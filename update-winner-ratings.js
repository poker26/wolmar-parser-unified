const { Pool } = require('pg');
const config = require('./config');

const pool = new Pool(config.dbConfig);

async function addAnalyticsColumns() {
    try {
        console.log('üîß –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è —Å–∫–æ—Ä–∏–Ω–≥–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        await pool.query(`ALTER TABLE winner_ratings ADD COLUMN IF NOT EXISTS suspicious_score INTEGER DEFAULT 0;`);
        await pool.query(`ALTER TABLE winner_ratings ADD COLUMN IF NOT EXISTS fast_bids_score INTEGER DEFAULT 0;`);
        await pool.query(`ALTER TABLE winner_ratings ADD COLUMN IF NOT EXISTS autobid_traps_score INTEGER DEFAULT 0;`);
        await pool.query(`ALTER TABLE winner_ratings ADD COLUMN IF NOT EXISTS manipulation_score INTEGER DEFAULT 0;`);
        await pool.query(`ALTER TABLE winner_ratings ADD COLUMN IF NOT EXISTS last_analysis_date TIMESTAMP DEFAULT NULL;`);
        
        console.log('‚úÖ –ù–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        const stats = await pool.query(`
            SELECT 
                COUNT(*) as total_users,
                COUNT(CASE WHEN suspicious_score > 0 THEN 1 END) as users_with_scores,
                MIN(updated_at) as oldest_update,
                MAX(updated_at) as newest_update
            FROM winner_ratings
        `);
        
        console.log('\nüìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã winner_ratings:');
        console.log(`  - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.rows[0].total_users}`);
        console.log(`  - –° –±–∞–ª–ª–∞–º–∏ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: ${stats.rows[0].users_with_scores}`);
        console.log(`  - –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${stats.rows[0].newest_update}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –≤ auction_lots
        const winnersCount = await pool.query(`
            SELECT COUNT(DISTINCT winner_login) as unique_winners
            FROM auction_lots 
            WHERE winner_login IS NOT NULL 
            AND winner_login != ''
            AND winning_bid IS NOT NULL 
            AND winning_bid > 0
        `);
        
        console.log(`  - –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –≤ auction_lots: ${winnersCount.rows[0].unique_winners}`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await pool.end();
    }
}

addAnalyticsColumns();
